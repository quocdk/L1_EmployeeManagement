// <auto-generated />
using System;
using DAL.ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250606053235_test4")]
    partial class test4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("City", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            Name = "Hà Nội"
                        },
                        new
                        {
                            Id = new Guid("d9ccef94-ba5e-4746-9150-c7ffa4492d6d"),
                            Name = "Thái Bình"
                        });
                });

            modelBuilder.Entity("DAL.Models.Commune", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Commune", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7b4e2be-4902-498f-954b-e35ebb7be2aa"),
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            DistrictId = new Guid("8df1f290-ed39-43d9-9f86-76eb7570bbe6"),
                            Name = "Tân Lập"
                        },
                        new
                        {
                            Id = new Guid("0d118c45-451d-4be9-aea5-21e727a4e68c"),
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            DistrictId = new Guid("8df1f290-ed39-43d9-9f86-76eb7570bbe6"),
                            Name = "Tân Hội"
                        });
                });

            modelBuilder.Entity("DAL.Models.Diploma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Diploma", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("60c03512-f941-4bd0-ae94-62f2315b05b9"),
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            EmployeeId = new Guid("db3fc518-b1f8-4694-ab71-b5657c6a663a"),
                            ExpiryDate = new DateTime(2022, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(2021, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Văn bằng 1",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("84caaff9-1259-42fd-9e48-4507dc9b5cb4"),
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            EmployeeId = new Guid("1e35b504-4a19-429a-9fe9-a14151e6ebd5"),
                            ExpiryDate = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IssueDate = new DateTime(2023, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Văn bằng 2",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DAL.Models.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("District", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8df1f290-ed39-43d9-9f86-76eb7570bbe6"),
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            Name = "Đan Phượng"
                        },
                        new
                        {
                            Id = new Guid("48868dd6-6ef9-4d85-ab33-3e68369f3542"),
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            Name = "Hoài Đức"
                        });
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("CitizenIdentityCard")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommuneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiplomaNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EthnicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OccupationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SpecificAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CommuneId");

                    b.HasIndex("EthnicId");

                    b.HasIndex("OccupationId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("db3fc518-b1f8-4694-ab71-b5657c6a663a"),
                            Age = 22,
                            CitizenIdentityCard = "012345678911",
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            CommuneId = new Guid("c7b4e2be-4902-498f-954b-e35ebb7be2aa"),
                            DateOfBirth = new DateTime(2003, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiplomaNumber = 1,
                            DistrictId = new Guid("8df1f290-ed39-43d9-9f86-76eb7570bbe6"),
                            EthnicId = new Guid("41b20ba1-2ce1-405f-b828-30e2a975db67"),
                            FullName = "Đinh Kiến Quốc 1",
                            OccupationId = new Guid("9c6764d2-508c-4ea8-a916-bd8c39900a6c"),
                            PhoneNumber = "0123456781",
                            SpecificAddress = "Cụm 1"
                        },
                        new
                        {
                            Id = new Guid("1e35b504-4a19-429a-9fe9-a14151e6ebd5"),
                            Age = 22,
                            CitizenIdentityCard = "012345678912",
                            CityId = new Guid("a0191258-172c-42ea-81b9-c71cd98b047b"),
                            CommuneId = new Guid("0d118c45-451d-4be9-aea5-21e727a4e68c"),
                            DateOfBirth = new DateTime(2003, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiplomaNumber = 1,
                            DistrictId = new Guid("8df1f290-ed39-43d9-9f86-76eb7570bbe6"),
                            EthnicId = new Guid("192f5268-6de2-4093-a720-4f4409dbc707"),
                            FullName = "Đinh Kiến Quốc 2",
                            OccupationId = new Guid("4f8d1e94-7904-4598-8343-f2984ee1af87"),
                            PhoneNumber = "0123456782",
                            SpecificAddress = "cụm 2"
                        });
                });

            modelBuilder.Entity("DAL.Models.Ethnic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ethnic", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("41b20ba1-2ce1-405f-b828-30e2a975db67"),
                            Name = "Kinh"
                        },
                        new
                        {
                            Id = new Guid("192f5268-6de2-4093-a720-4f4409dbc707"),
                            Name = "Mường"
                        });
                });

            modelBuilder.Entity("DAL.Models.Occupation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Occupation", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c6764d2-508c-4ea8-a916-bd8c39900a6c"),
                            Name = "Lập trình viên"
                        },
                        new
                        {
                            Id = new Guid("4f8d1e94-7904-4598-8343-f2984ee1af87"),
                            Name = "Nhân viên bán hàng"
                        });
                });

            modelBuilder.Entity("DAL.Models.Commune", b =>
                {
                    b.HasOne("DAL.Models.District", "District")
                        .WithMany("Communes")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("DAL.Models.Diploma", b =>
                {
                    b.HasOne("DAL.Models.City", "City")
                        .WithMany("Diplomas")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Employee", "Employee")
                        .WithMany("Diplomas")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Models.District", b =>
                {
                    b.HasOne("DAL.Models.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.HasOne("DAL.Models.Commune", "Commune")
                        .WithMany("Employees")
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Ethnic", "Ethnic")
                        .WithMany("Employees")
                        .HasForeignKey("EthnicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Occupation", "Occupation")
                        .WithMany("Employees")
                        .HasForeignKey("OccupationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");

                    b.Navigation("Ethnic");

                    b.Navigation("Occupation");
                });

            modelBuilder.Entity("DAL.Models.City", b =>
                {
                    b.Navigation("Diplomas");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("DAL.Models.Commune", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DAL.Models.District", b =>
                {
                    b.Navigation("Communes");
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.Navigation("Diplomas");
                });

            modelBuilder.Entity("DAL.Models.Ethnic", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DAL.Models.Occupation", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
