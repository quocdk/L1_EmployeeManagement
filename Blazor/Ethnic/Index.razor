@page "/ethnic/index"
@using DAL.Models
@inject IHttpClientFactory _httpClientFactory

<h4>
    Danh sách Dân tộc
</h4>
<a class="btn btn-primary" href="ethnic/create">Thêm mới</a>
<button class="btn btn-primary" @onclick="@(() => ReLoadData())">Tải lại danh sách</button>
<hr />
<div class="mb-3 row">
    <div class="me-2 col-sm-3">
        <input class="form-control" placeholder="Nhập tên muốn tìm kiếm" @bind=ethnic.Name>
    </div>
    <button class="col-sm-1 btn btn-success" @onclick="@(() => Search(ethnic.Name))">Tìm kiếm</button>
</div>

<br />
@if (listEthnics == null && listEthnicsSearch == null)
{
    <div class="spinner-border m-5" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Tên</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (listEthnicsSearch != null)
            {
                @foreach (var ethnic in listEthnicsSearch)
                {
                    <tr>
                        <td>@ethnic.Name</td>
                        <td>
                            <a class="btn btn-info" href="/ethnic/detail/@ethnic.Id">Chi tiết</a>
                            <button class="btn btn-danger" @onclick="@(() => Delete(ethnic.Id))">Xóa</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                @foreach (var ethnic in listEthnics)
                {
                    <tr>
                        <td>@ethnic.Name</td>
                        <td>
                            <a class="btn btn-info" href="/ethnic/detail/@ethnic.Id">Chi tiết</a>
                            <button class="btn btn-danger" @onclick="@(() => Delete(ethnic.Id))">Xóa</button>
                        </td>
                    </tr>
                }
            }
            
        </tbody>
    </table>

}

@code {
    List<Ethnic> listEthnics = null;
    List<Ethnic> listEthnicsSearch = null;
    Ethnic ethnic = new();
    string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        await Task.Delay(1000);

        var client = _httpClientFactory.CreateClient();

        var response = await client.GetFromJsonAsync<List<Ethnic>>("https://localhost:7219/api/Ethnics");
        listEthnics = response;

        errorMessage = string.Empty;
    }
    async Task ReLoadData()
    {
        listEthnicsSearch = null;
    }

    async Task Delete(Guid id)
    {
        var client = _httpClientFactory.CreateClient();
        var response = await client.DeleteAsync($"https://localhost:7219/api/Ethnics/{id}");

        await LoadData();
    }

    async Task Search(string name)
    {
        await Task.Delay(1000);

        if (!string.IsNullOrEmpty(name))
        {
            listEthnicsSearch = listEthnics.Where(x => x.Name.ToLower().Contains(name)).ToList();
        }
    }



}
