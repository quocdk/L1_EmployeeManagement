@page "/commune/index"
@using DAL.Models
@inject IHttpClientFactory _httpClientFactory

<h4>
    Danh sách Xã / Phường
</h4>
<a class="btn btn-primary" href="commune/create">Thêm mới</a>
<button class="btn btn-primary" @onclick="@(() => ReLoadData())">Tải lại danh sách</button>
<hr />
<div class="mb-3 row">
    <div class="col-sm-3">
        <input class="form-control" placeholder="Nhập xã / phường muốn tìm kiếm" @bind=commune.Name>
    </div>
    <div class="col-sm-3">
        <input class="form-control" placeholder="Nhập quận / huyện muốn tìm kiếm" @bind=district.Name>
    </div>
    <div class="me-2 col-sm-3">
        <input class="form-control" placeholder="Nhập tỉnh / thành phố muốn tìm kiếm" @bind=city.Name>
    </div>
    <button class="col-sm-1 btn btn-success" @onclick="@(() => Search(commune.Name, district.Name, city.Name))">Tìm kiếm</button>
</div>

<br />
@if (listCommuneJoin == null && listCommuneJoinSearch == null )
{
    <div class="spinner-border m-5" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Tên</th>
                <th>Quận / Huyện</th>
                <th>Tỉnh / Thành phố</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (listCommuneJoinSearch != null)
            {
                @foreach (var commune in listCommuneJoinSearch)
                {
                    <tr>
                        <td>@commune.Name</td>
                        <td>@commune.DistrictName</td>
                        <td>@commune.CityName</td>
                        <td>
                            <a class="btn btn-info" href="/commune/detail/@commune.Id">Chi tiết</a>
                            <button class="btn btn-danger" @onclick="@(() => Delete(commune.Id))">Xóa</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                @foreach (var commune in listCommuneJoin)
                {
                    <tr>
                        <td>@commune.Name</td>
                        <td>@commune.DistrictName</td>
                        <td>@commune.CityName</td>
                        <td>
                            <a class="btn btn-info" href="/commune/detail/@commune.Id">Chi tiết</a>
                            <button class="btn btn-danger" @onclick="@(() => Delete(commune.Id))">Xóa</button>
                        </td>
                    </tr>
                }
            }
            
        </tbody>
    </table>

}

<span>@errorMessage</span>


@code {
    List<City> listCities = null;
    City city = new();

    List<District> listDistricts = null;
    District district = new();

    List<Commune> listCommunes = null;
    Commune commune = new();

    public class CommuneJoin
    {
        public Guid Id { get; set; }
        public string Name { get; set; }
        public string DistrictName { get; set; }
        public string CityName { get; set; }
    }
    List<CommuneJoin> listCommuneJoin = null;
    List<CommuneJoin> listCommuneJoinSearch = null;

    string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        await Task.Delay(1000);

        var client = _httpClientFactory.CreateClient();

        var responseCommune = await client.GetFromJsonAsync<List<Commune>>("https://localhost:7219/api/Communes");
        listCommunes = responseCommune;

        var responseDistrict = await client.GetFromJsonAsync<List<District>>("https://localhost:7219/api/Districts");
        listDistricts = responseDistrict;

        var responseCity = await client.GetFromJsonAsync<List<City>>("https://localhost:7219/api/Cities");
        listCities = responseCity;

        listCommuneJoin = (from commune in listCommunes
                           join district in listDistricts on commune.DistrictId equals district.Id
                           join city in listCities on district.CityId equals city.Id
                           select new CommuneJoin
                               {
                                   Id = commune.Id,
                                   Name = commune.Name,
                                   DistrictName = district.Name,
                                   CityName = city.Name
                               }).ToList();
    }
    async Task ReLoadData()
    {
        listCommuneJoinSearch = null;
    }

    async Task Delete(Guid id)
    {
        var client = _httpClientFactory.CreateClient();

        var response = await client.DeleteAsync($"https://localhost:7219/api/Communes/{id}");

        await LoadData();
    }

    async Task Search(string communeName, string districtName, string cityName)
    {
        await Task.Delay(1000);

        listCommuneJoinSearch = listCommuneJoin;

        if (!string.IsNullOrEmpty(communeName))
        {
            listCommuneJoinSearch = listCommuneJoinSearch.Where(x => x.Name.ToLower().Contains(communeName)).ToList();
        }

        if (!string.IsNullOrEmpty(districtName))
        {
            listCommuneJoinSearch = listCommuneJoinSearch.Where(x => x.DistrictName.ToLower().Contains(districtName)).ToList();
        }

        if (!string.IsNullOrEmpty(cityName))
        {
            listCommuneJoinSearch = listCommuneJoinSearch.Where(x => x.CityName.ToLower().Contains(cityName)).ToList();
        }
    }


    

    
}
