@page "/employee/detail/{id}"
@using DAL.Models
@inject IHttpClientFactory _httpClientFactory
@inject NavigationManager NavigationManager

<NavLink class="nav-link" href="employee/index">◀ Danh sách Nhân viên</NavLink>
<hr />
<h5>
    Chi tiết Nhân viên
</h5>
<br />
<div class="mb-3 row">
    <label class="col-sm-1 col-form-label">Họ tên: </label>
    <div class="me-5 col-sm-3">
        <input class="form-control" @bind=employee.FullName>
    </div>  
    <label class="col-sm-1 col-form-label">Ngày sinh: </label>
    <div class="me-5 col-sm-2">
        <input type="date" class="form-control" value="@employee.DateOfBirth.ToString("yyyy-MM-dd")" @onchange="OnDateOfBirthChanged">
    </div>
    <label class="col-sm-1 col-form-label">Tuổi: </label>
    <div class="col-sm-1">
        <input class="form-control" @bind=employee.Age disabled>
    </div>
</div>
<div class="mb-3 row">
    <label class="col-sm-1 col-form-label">Dân tộc: </label>
    <div class="me-5 col-sm-2">
        <select class="form-select" @bind=employee.EthnicId aria-label="Default select example">
            <option selected></option>
            @if (listEthnics != null)
            {
                @foreach (var ethnic in listEthnics)
                {
                    <option value="@ethnic.Id">@ethnic.Name</option>
                }
            }
        </select>
    </div>
    <label class="col-sm-2 col-form-label">Nghề nghiệp: </label>
    <div class="col-sm-3">
        <select class="form-select" @bind=employee.OccupationId aria-label="Default select example">
            <option selected></option>
            @if (listOccupations != null)
            {
                @foreach (var occupation in listOccupations)
                {
                    <option value="@occupation.Id">@occupation.Name</option>
                }
            }
        </select>
    </div>
</div>
<div class="mb-3 row">
    <label class="col-sm-2 col-form-label">Căn cước công dân: </label>
    <div class="me-5 col-sm-3">
        <input class="form-control" @bind=employee.CitizenIdentityCard>
    </div>
    <label class="col-sm-2 col-form-label">Số điện thoại: </label>
    <div class="col-sm-2">
        <input class="form-control" @bind=employee.PhoneNumber>
    </div>
</div>
<div class="mb-3 row">
    <label class="col-sm-2 col-form-label">Tỉnh / Thành phố: </label>
    <div class="me-5 col-sm-3">
        <select class="form-select" value="@employee.CityId" @onchange="OnCityChanged" aria-label="Default select example">
            <option value="" selected></option>
            @if (listCities != null)
            {
                @foreach (var city in listCities)
                {
                    <option value="@city.Id">@city.Name</option>
                }
            }
        </select>
    </div>
    <label class="col-sm-2 col-form-label">Quận / Huyện: </label>
    <div class="col-sm-3">
        <select class="form-select" value="@employee.DistrictId" @onchange="OnDistrictChanged" aria-label="Default select example">
            <option value="" selected></option>
            @if (listDistrictsByCityId != null)
            {
                @foreach (var district in listDistrictsByCityId)
                {
                    <option value="@district.Id">@district.Name</option>
                }
            }
        </select>
    </div>
</div>
<div class="mb-3 row">
    <label class="col-sm-2 col-form-label">Xã / Phường: </label>
    <div class="me-5 col-sm-3">
        <select class="form-select" @bind=employee.CommuneId aria-label="Default select example">
            <option selected></option>
            @if (listCommunesByDistrictId != null)
            {
                @foreach (var commune in listCommunesByDistrictId)
                {
                    <option value="@commune.Id">@commune.Name</option>
                }
            }
        </select>
    </div>
    <label class="col-sm-2 col-form-label">Cụ thể: </label>
    <div class="col-sm-3">
        <input class="form-control" @bind=employee.SpecificAddress>
    </div>
</div>
<hr />
<button class="btn btn-success" @onclick="@(() => Update())">Sửa</button>
<span>@message</span>


@code {
    List<Ethnic> listEthnics = null;
    Ethnic ethnic = new();

    List<Occupation> listOccupations = null;
    Occupation occupation = new();

    List<City> listCities = null;
    City city = new();

    List<District> listDistricts = null;
    List<District> listDistrictsByCityId = null;
    District district = new();

    List<Commune> listCommunes = null;
    List<Commune> listCommunesByDistrictId = null;
    Commune commune = new();

    [Parameter]
    public string id { set; get; }

    Employee employee = new();

    string errorMessage = string.Empty;
    string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        await Details(Guid.Parse(id));
        await LoadDistrictsByCityId(employee.CityId);
        await LoadCommunesByDistrictId(employee.DistrictId);
    }

    async Task Details(Guid id)
    {
        var client = _httpClientFactory.CreateClient();

        var response = await client.GetFromJsonAsync<Employee>($"https://localhost:7219/api/Employees/{id}");
        employee = response;

        employee.Age = DateTime.Now.Year - employee.DateOfBirth.Year;

    }

    async Task LoadData()
    {
        await Task.Delay(1000);

        var client = _httpClientFactory.CreateClient();

        var responseEthnic = await client.GetFromJsonAsync<List<Ethnic>>("https://localhost:7219/api/Ethnics");
        listEthnics = responseEthnic;

        var responseOccupation = await client.GetFromJsonAsync<List<Occupation>>("https://localhost:7219/api/Occupations");
        listOccupations = responseOccupation;

        var responseCity = await client.GetFromJsonAsync<List<City>>("https://localhost:7219/api/Cities");
        listCities = responseCity;

        var responseDistrict = await client.GetFromJsonAsync<List<District>>("https://localhost:7219/api/Districts");
        listDistricts = responseDistrict;

        var responseCommune = await client.GetFromJsonAsync<List<Commune>>("https://localhost:7219/api/Communes");
        listCommunes = responseCommune;
    }

    async Task OnDateOfBirthChanged(ChangeEventArgs e)
    {
        var selectedDateOfBirth = DateTime.Parse(e.Value.ToString());

        employee.DateOfBirth = selectedDateOfBirth;
        employee.Age = DateTime.Now.Year - selectedDateOfBirth.Year;
    }

    async Task OnCityChanged(ChangeEventArgs e)
    {
        if (e.Value.ToString() == "")
        {
            listDistrictsByCityId = null;
            listCommunesByDistrictId = null;
        }
        else
        {
            var selectedCityId = Guid.Parse(e.Value.ToString());
            employee.CityId = selectedCityId;

            await LoadDistrictsByCityId(selectedCityId);

            employee.DistrictId = null;
            listCommunesByDistrictId = null;
        }

    }

    async Task LoadDistrictsByCityId(Guid id)
    {
        listDistrictsByCityId = listDistricts.Where(x => x.CityId == id).ToList();
    }

    async Task OnDistrictChanged(ChangeEventArgs e)
    {
        if (e.Value.ToString() == "")
        {
            listCommunesByDistrictId = null;
        }
        else
        {
            var selectedDistrictId = Guid.Parse(e.Value.ToString());
            employee.DistrictId = selectedDistrictId;

            await LoadCommunesByDistrictId(selectedDistrictId);

            employee.CommuneId = null;
        }
        
    }

    async Task LoadCommunesByDistrictId(Guid? id)
    {
        listCommunesByDistrictId = listCommunes.Where(x => x.DistrictId == id).ToList();
    }

    async Task Update()
    {
        if (string.IsNullOrWhiteSpace(employee.FullName))
        {
            errorMessage = "Tên không được rỗng hoặc chứa toàn khoảng trắng";
        }
        else
        {
            var client = _httpClientFactory.CreateClient();

            var response = await client.PutAsJsonAsync<Employee>("https://localhost:7219/api/Employees", employee);

            NavigationManager.NavigateTo("/employee/index");

        }
    }
}
