@page "/occupation/detail/{id}"
@using DAL.Models
@inject IHttpClientFactory _httpClientFactory
@inject NavigationManager NavigationManager

<NavLink class="nav-link" href="occupation/index">◀ Danh sách Nghề nghiệp</NavLink>
<hr />
<h5>
    Chi tiết Nghề nghiệp
</h5>
<br />
<div class="mb-3 row">
    <label class="col-sm-1 col-form-label">Tên: </label>
    <div class="col-sm-3">
        <input class="form-control" @bind=occupation.Name>
    </div>
    <span>@errorMessage</span>
</div>
<hr />
<button class="btn btn-success" @onclick="@(() => Update())">Sửa</button>


@code {
    [Parameter]
    public string id { set; get; }

    Occupation occupation = new();
    string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await Details(Guid.Parse(id));
    }

    async Task Details(Guid id)
    {
        var client = _httpClientFactory.CreateClient();
        var response = await client.GetFromJsonAsync<Occupation>($"https://localhost:7219/api/Occupations/{id}");

        occupation = response;
    }
    async Task Update()
    {
        if (string.IsNullOrWhiteSpace(occupation.Name))
        {
            errorMessage = "Tên không được rỗng hoặc chứa toàn khoảng trắng";
        }
        else
        {
            var client = _httpClientFactory.CreateClient();
            var response = await client.PutAsJsonAsync<Occupation>("https://localhost:7219/api/Occupations", occupation);

            NavigationManager.NavigateTo("/occupation/index");

        }
    }
}
